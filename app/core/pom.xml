<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>related-core</artifactId>
    <packaging>pom</packaging>
    <parent>
	    <groupId>org.greencheek.related</groupId>
	    <artifactId>related-parent</artifactId>
	    <version>1.0.7-SNAPSHOT</version>
    </parent>

    <name>Related Content Web Service that uses  ElasticSearch</name>
    <description>
        Implementation of a Related Content Web Service.  The idea is to provide a basic mechanism to do:
        This item X is frequently purchased with Y and Z.
    </description>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <interface>127.0.0.1</interface>
        <jetty.http.port>8080</jetty.http.port>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>



    <dependencies>
        <!-- servlet 3 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- used for caching date strings -->
        <dependency>
            <groupId>com.googlecode.concurrentlinkedhashmap</groupId>
            <artifactId>concurrentlinkedhashmap-lru</artifactId>
            <version>1.4</version>
        </dependency>

        <!-- below is just here for code completion, ide navigation.. it comes part and parcel of elasticsearch -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.2.0</version>
            <scope>runtime</scope>
        </dependency>




        <!--<dependency>-->
            <!--<groupId>io.netty</groupId>-->
            <!--<artifactId>netty-buffer</artifactId>-->
            <!--<version>4.0.10.Final</version>-->
        <!--</dependency>-->

        <!-- json parsing -->
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>1.1.1</version>
        </dependency>

        <!-- date parsing -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.2</version>
        </dependency>



    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.0.3.v20130506</version>
                <configuration>
                    <jvmArgs>-Xmx1024m -Xms1024m -Xmn256m -XX:MaxPermSize=128m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044</jvmArgs>
                    <webAppConfig>
                        <contextPath>/${project.build.finalName}</contextPath>
                    </webAppConfig>
                    <!-- <jettyXml>src/test/resources/jetty.xml,src/test/resources/jetty-http.xml</jettyXml> -->
                    <stopKey>blah</stopKey>
                    <stopPort>6789</stopPort>

                    <systemProperties>
                        <systemProperty>
                            <name>org.apache.logging.log4j.core.async.AsyncLoggerContextSelector</name>
                        </systemProperty>
                    </systemProperties>

                    <contextPath>${webAppContext}</contextPath>
                </configuration>
            </plugin>


        </plugins>


    </build>

    <modules>
        <module>indexing</module>
        <module>searching</module>
    </modules>


</project>
